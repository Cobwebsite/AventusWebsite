<h1>RAM - Operations</h1>
<p>To manage data inside your RAM, can perfom 4 kind of operations :</p>
<ul>
    <li>Create - To add data inside your RAM</li>
    <li>Read - To read data inside your RAM</li>
    <li>Update - To update data inside your RAM</li>
    <li>Delete - To delete data from your RAM</li>
</ul>

<h2>Basic operations</h2>
<p>Inside Aventus RAM, each function to perfom operation can be written in two format. The first format is the normal.
    You call the function and get the result.</p>
<p>The second format is the detailed. You call the function with <span class="cn">WithError</span> at the end to obtain more
    informations.</p>
<av-doc-ram-crud-editor-1></av-doc-ram-crud-editor-1>
<p>For the future explanations, only the functions in normal format will be explained</p>
<h3>Read</h3>
<div class="table">
    <av-row class="header">
        <av-col size="4" center>Function</av-col>
        <av-col size="8" center>Description</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>getAll</av-col>
        <av-col size="8" center>Return all items stored inside the RAM like {[index: Index] : T}
        </av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>getList</av-col>
        <av-col size="8" center>Return all items stored inside the RAM like T[]
        </av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>getById</av-col>
        <av-col size="8" center>Return the item where the index is egal to the parameter
            provide</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>get</av-col>
        <av-col size="8" center><span>Alias for <span class="cn">getById</span></span></av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>getByIds</av-col>
        <av-col size="8" center>Return all items where the index is inside the first parameter
            provide</av-col>
    </av-row>
</div>
<av-doc-ram-crud-editor-2></av-doc-ram-crud-editor-2>
<h3>Create</h3>
<div class="table">
    <av-row class="header">
        <av-col size="4" center>Function</av-col>
        <av-col size="8" center>Description</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>create</av-col>
        <av-col size="8" center>Store an item inside the RAM and return the element stored.</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>createList</av-col>
        <av-col size="8" center>Store a set of items inside the RAM and return the elements
            stored.</av-col>
    </av-row>
</div>
<av-doc-ram-crud-editor-3></av-doc-ram-crud-editor-3>
<h3>Update</h3>
<div class="table">
    <av-row class="header">
        <av-col size="4" center>Function</av-col>
        <av-col size="8" center>Description</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>update</av-col>
        <av-col size="8" center>Update an item inside the RAM and return the element updated.</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>updateList</av-col>
        <av-col size="8" center>Update a set of items inside the RAM and return the elements
            stored.</av-col>
    </av-row>
</div>
<av-doc-ram-crud-editor-4></av-doc-ram-crud-editor-4>
<h3>Delete</h3>
<div class="table">
    <av-row class="header">
        <av-col size="4" center>Function</av-col>
        <av-col size="8" center>Description</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>delete</av-col>
        <av-col size="8" center>Delete an item inside the RAM and return the element updated.</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>deleteById</av-col>
        <av-col size="8" center>Delete an item inside the RAM and return the element updated.</av-col>
    </av-row>
    <av-row>
        <av-col size="4" center>deleteList</av-col>
        <av-col size="8" center>Delete a set of items inside the RAM and return the elements
            stored.</av-col>
    </av-row>
</div>
<av-doc-ram-crud-editor-5></av-doc-ram-crud-editor-5>
<p>The last thing to know is that once an item a stored inside the ram, the item reference is always the same.</p>
<av-code language="typescript" filename="Test.lib.avt">
    export async function test() {
    \tlet person1: Person = await PersonRAM.getInstance().get(1);
    \tperson1.name = "John Doe 2";
    \tconst person: Person = await PersonRAM.getInstance().update(person1);
    \t// person == person1 =&gt; true
    }
</av-code>