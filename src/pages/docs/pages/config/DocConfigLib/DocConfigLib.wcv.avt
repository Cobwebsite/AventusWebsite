<h1>Configuration - Libraries</h1>
<p>When you create a build, you might like to import a library to reuse some code parts. Here you are going to learn how
    to define all libs that must be imported inside a build. You can find package to download by searching inside the
    aventusjs store : <span class="cn"><a href="https://store.aventusjs.com">https://store.aventusjs.com</a></span></p>

<p>The easiest format is the following : </p>

<av-code language="json">
    <pre>
    {
        "dependances": {
            "MaterialIcon": "1.0.0",
        }
    }
    </pre>
</av-code>

<p>By default, this will search inside the store. If you need to import other package you can define an object to have
    more options.</p>

<h2>Properties</h2>
<div class="table">
    <av-dynamic-row class="header">
        <av-dynamic-col size="4" center>Name</av-dynamic-col>
        <av-dynamic-col size="8" center>Description</av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>uri</av-dynamic-col>
        <av-dynamic-col size="8" center>This is a string to define where to find the file to import. To have more
            informations about this path, you can read the next chapter.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>version</av-dynamic-col>
        <av-dynamic-col size="8" center>
            <div>This is a string to define which version of the code is needed.
                <span class="constraint">Must satisfy: <span class="cn">^[0-9]+\\.[0-9]+\\.[0-9]+$</span></span>
            </div>
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>isLocal</av-dynamic-col>
        <av-dynamic-col size="8" center>
            <div>This will search a package matching the name inside your locals projects. You can find all these
                librairies by typing the command <span class="cn">Aventus : Open aventus storage</span> and then
                navigate inside your file explorer under the <span class="cn">packages>@locals</span>. If you use a local package, you don't need to define a version.</div>
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>include</av-dynamic-col>
        <av-dynamic-col size="8" center>
            <span>This is a string to define how the lib must be included inside output js file.</span>
            <ul>
                <li>none: No need to include the lib inside the output file.</li>
                <li>need: Include only the needed code inside the output file. (This is the default value)</li>
                <li>full: Include all the code of the lib inside the ouput file.</li>
            </ul>
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>subDependancesInclude</av-dynamic-col>
        <av-dynamic-col size="8" center>
            <span>This is a object where the key is the sub library name and the value is the inclusion pattern. The
                will define how the library of the library must be included inside output js file.</span>
            <ul>
                <li>none: No need to include the sub lib inside the output file.</li>
                <li>need: Include only the needed code inside the output file. (This is the default value)</li>
                <li>full: Include all the code of the sub lib inside the ouput file.</li>
            </ul>
        </av-dynamic-col>
    </av-dynamic-row>
</div>

<h2>Libraries name</h2>
<p>You can use a few name kinds to load a library. If you use a predefined name you don't need version. There are 5 libs
    with predefined uri:</p>
<ul>
    <li>Aventus@Main : This is the core of Aventus, if you omit this lib inside your build, it will be automaticaly
        added.</li>
    <li>Aventus@UI : This lib contains some useful webcomponent to create interface.</li>
    <li>Aventus@I18n : This lib contains i18n tools. If you define <span class="cn">i18n</span> inside your configuration file, this lib will be automaticaly loaded.</li>
    <li>Aventus@Php : This lib contains Aventus code base for project <span class="cn">Laraventus</span>.</li>
    <li>Aventus@Sharp : This lib contains Aventus code base for project <span class="cn">AventusSharp</span>.</li>
</ul>
<av-code language="json">
    <pre>
    {
        "dependances": {
            "Aventus@UI": {},
        }
    }
    </pre>
</av-code>

<h2>Store</h2>
<p>You can search packages inside the aventus store. This is the recommanded way to load package.</p>
<p><a href="https://store.aventusjs.com/packages"><av-button>Open the store</av-button></a></p>


<h2>File uri</h2>
<p>You can add directly an uri that resolve a <span class="cn">.package.avt</span> file to import it.</p>
<av-code language="json" filename="aventus.conf.avt">
    <pre>
        {
            dependances: {
                "Lib1@Main": {
                    "uri": "./myLibs/Lib1@Main.package.avt"
                },
                "Lib2@Main": {
                    "uri": "C:\\\\myLibs\\\\Lib2@Main.package.avt"
                }
            }
        }
    </pre>
</av-code>
<h2>File via http</h2>
<p>You can resolve dependance via http. Package will be stored inside the Aventus <span class="cn">storage&gt;packages&gt;http</span>. In this
    folder, you must find
    a list
    of subfolder where the name is the md5 value of the uri that you set as uri. The entry point is a json named
    <span class="cn">info.json</span>
</p>

<p>When a specific version is required, Aventus will use the uri to download the file and save it inside the folder as
    <span class="cn">$name</span>#<span class="cn">$version</span> (ex: Aventus@Main#1.0.0.package.avt) and add a <span
        class="cn">localUri</span> property that will be
    used inside the build.
</p>