<h1>State - Listen changes</h1>
<p>Changing state is great, but for sure you will need to listen when a state change. Three methods compose the <span
        class="cn">State</span> lifecylce. This tuple is named <span class="cn">StateAction</span> inside Aventus.</p>
<ul>
    <li><span class="cn">active</span>: when a state become active.</li>
    <li><span class="cn">inactive</span>: when a state become inactive.</li>
    <li><span class="cn">askChange</span>: a way to define if the state change can be done or not.</li>
</ul>

<h2>Callback on the StateManager</h2>
<p>For the example, we are going to listen a state to display a user.</p>
<av-doc-state-listen-editor-1></av-doc-state-listen-editor-1>
<p>We subscribe to the state <span class="cn">/user/{id:number}</span> what means that the manager will trigger active
    when the current state is matching <span class="cn">/^\\/user\\/([0-9]+)$/g</span>. The type available are <span
        class="cn">number</span> and <span class="cn">string</span>. If you don't set type, string will be use by
    default. You can also use the star (<span class="cn">*</span>) to match anything.</p>

<p>When the <span class="cn">setUser</span> function is called, the log <span class="cn">user active is...</span> will
    be displayed. If you set the current state to <span class="cn">/other</span>, the inactive state will be called.
    It's important to know that if your state stay active between two state changes, the function <span
        class="cn">inactive</span> won't be fired.</p>
<av-doc-state-listen-editor-2></av-doc-state-listen-editor-2>
<p>If we come back to the previous example, if we set the user to <span class="cn">id = 3</span> the function <span
        class="cn">askChange</span> will return a false what involves that no more state changes are allowed. A use case
    for this feature is when the user is editing data and he decides to change state without saving item. You can
    display a popup to confirm if edition must be dropped or not.</p>

<p>If you need to know the current state of the manager, you can at any time call the function <span
        class="cn">getState</span> to obtain the current state object instance. Furthermore, you can use operator <span
        class="cn">instanceof</span> to obtain more information and share some data between subscribers.</p>
<av-doc-state-listen-editor-3></av-doc-state-listen-editor-3>
<h2>Callback on the State</h2>
<p>You can also override the three methods directly inside a <span class="cn">State</span> class.</p>
<av-doc-state-listen-editor-4></av-doc-state-listen-editor-4>