<h1>Socket - Create</h1>
<p>In the section you are going to learn what is a socket and how you can create it inside Aventus.</p>
<h2>Definition</h2>
<p>A socket is a way define by Aventus to communicate with your backend through the <a
        href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API" target="_blank">websocket protocol</a>.
    The goal of this class is to create a bidirectional communication to keep your interface up to date.</p>

<h2>Inside Aventus</h2>
<p>Inside Aventus you can create a new socket class by right clicking on the explorer part inside vscode, choose
    <i>Aventus
        : Create...</i> and choose <i>Socket</i>. Inside the input you can enter the name for the socket. This will
    create
    a basic socket class:
</p>

<av-code language="typescript" filename="Login.socket.avt">
    export class LoginSocket extends Aventus.Socket implements Aventus.ISocket {
    &nbsp;
    \t/**
    \t* Get the instance of the websocket
    \t*/
    \tpublic static getInstance() {
    \t\treturn Aventus.Instance.get(LoginSocket);
    \t}
    &nbsp;
    \t/**
    \t* @inheritdoc
    \t*/
    \tprotected override configure(options: Aventus.SocketOptions): Aventus.SocketOptions {
    \t\treturn options;
    \t}
    &nbsp;
    }
</av-code>
<p>Usually, a socket should be a singleton because you only want one connection to be opened with your backend. You can
    configure socket options to do the job you want.
</p>

<div class="table">
    <av-dynamic-row class="header">
        <av-dynamic-col size="4" center>Name</av-dynamic-col>
        <av-dynamic-col size="8" center>Description</av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>host</av-dynamic-col>
        <av-dynamic-col size="8" center>Define the host to open the websocket connection. By default it is the same as
            your current url.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>port</av-dynamic-col>
        <av-dynamic-col size="8" center>Define the port to open the websocket connection. By default it is the same as
            your current url.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>useHttps</av-dynamic-col>
        <av-dynamic-col size="8" center>Define if the protocol is wss or ws. By default it is the same as your current
            url.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>routes</av-dynamic-col>
        <av-dynamic-col size="8" center>Add default custom routes to listen messages from the server.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>socketName</av-dynamic-col>
        <av-dynamic-col size="8" center>You can create different socket inside your backend differentiate by an url. The
            base url is <b>/ws/</b>. If you set a socket name, the socket url will be <b>/ws/{socketName}</b>.
        </av-dynamic-col>
    </av-dynamic-row>
    <av-dynamic-row>
        <av-dynamic-col size="4" center>log</av-dynamic-col>
        <av-dynamic-col size="8" center>Enable or disable log. By default the value is false.
        </av-dynamic-col>
    </av-dynamic-row>
</div>

<p> Inside the class you can override 3 methods to manage your <a
        href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#events" target="_blank">socket life cycle</a>.
</p>
<ul>
    <li>onOpen: Fired when the websocket is opened.</li>
    <li>onError: Fired when the websocket connection has been closed due to an error.</li>
    <li>onClose: Fired when then websocket connection is closed</li>
</ul>

<av-code language="typescript" filename="Login.socket.avt">
    export class LoginSocket extends Aventus.Socket implements Aventus.ISocket {
    &nbsp;
    \t...
    &nbsp;
    \tprotected override onOpen(): void {
    \t\tconsole.log("Connection is now open");
    \t}
    &nbsp;
    \tprotected override onClose(event: Event): void {
    \t\tconsole.log("Connection is now close");
    \t}
    &nbsp;
    \tprotected override onError(event: Event): void {
    \t\tconsole.log("An error occured");
    \t}
    }
</av-code>

<p>The websocket message format is specific to Aventus. A message look like the following :</p>
<av-code language="json">
    {
    \t"channel": "/login",
    \t"data": {
    \t\t"username":"root",
    \t\t"password":"root"
    \t}
    }
</av-code>
<p>Where channel is a unique name to identify a route between the client and the server and data is the content of the message.</p>
<p>The different implementation for backend language is under developement. If you want to help you can join us here.</p>