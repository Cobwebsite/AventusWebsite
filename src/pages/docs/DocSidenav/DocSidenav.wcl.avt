import { DocPage } from "../DocPage/DocPage.wcl.avt";
import { Collapse } from "../../../core/components/Collapse/Collapse.wcl.avt";
import type { WebComponent } from "Aventus@Main:Aventus.package.avt";

export class DocSidenav extends Aventus.WebComponent implements Aventus.DefaultComponent {

    //#region static

    //#endregion


    //#region props

    //#endregion


    //#region variables

    //#endregion


    //#region states

    //#endregion


    //#region constructor

    //#endregion


    //#region methods
    public getNextAndPrevious(state: string): { next: string | null, previous: string | null; } {
        let result: { next: string | null, previous: string | null; } = {
            next: null,
            previous: null
        };
        let active = this.shadowRoot.querySelector<Aventus.Navigation.Link>(`av-link[to="${state}"]`);
        if(active) {
            let all = Array.from(this.shadowRoot.querySelectorAll<Aventus.Navigation.Link>("av-link"));
            let index = all.indexOf(active);
            if(index > 0) {
                let state = all[index - 1].to;
                if(state) {
                    result.previous = state;
                }
            }
            if(index < all.length - 1) {
                let state = all[index + 1].to;
                if(state) {
                    result.next = state;
                }
            }
        }
        return result;
    }

    private addActiveWatch() {
        let all = Array.from(this.shadowRoot.querySelectorAll<Aventus.Navigation.Link>("av-link"));
        for(let item of all) {
            this.addActiveWatchItem(item);
        }
    }
    private addActiveWatchItem(item: Aventus.Navigation.Link) {
        item.onActiveChange.add((isActive) => {
            if(isActive) {
                let coll: WebComponent | null = item;
                while(coll) {
                    coll = coll.findParentByType(Collapse);
                    if(coll instanceof Collapse) {
                        coll.open = true;
                    }
                }

            }
            else {
                let coll: WebComponent | null = item;
                while(coll) {
                    coll = coll.findParentByType(Collapse);
                    if(coll instanceof Collapse) {
                        coll.open = false;
                    }
                }
            }
        });
    }


    /**
     * 
     */
    protected closeNav() {
        this.findParentByType(DocPage)?.closeMenu();
    }

    protected override postCreation(): void {
        this.addActiveWatch();
    }
    //#endregion

}