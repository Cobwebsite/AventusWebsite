import type { CodeEditor } from "../CodeEditor.wcl.avt";
import type { AvCode } from "../../Code/Code.wcl.avt";

export class CodeEditorFile extends Aventus.WebComponent implements Aventus.DefaultComponent {

    //#region static

    //#endregion


    //#region props
    @Property((target: CodeEditorFile) => {
        target.prepareIcon();
    })
    public name: string = "";

    @Property()
    public icon?: string;

    @Attribute()
    public type?: "style" | "logic" | "view";
    @Attribute()
    public active!: boolean;
    @Attribute()
    public highlight: boolean = false;
    //#endregion


    //#region variables
    public code!: AvCode;
    public editor!: CodeEditor;
    //#endregion


    //#region constructor

    //#endregion


    //#region methods
    private prepareIcon() {
        if(this.name.endsWith(".wcs.avt") || this.name.endsWith(".gs.avt")) {
            this.icon = "/img/logo.svg";
            this.type = "style";
        }
        else if(this.name.endsWith(".wcv.avt")) {
            this.icon = "/img/logo.svg";
            this.type = "view";
        }
        else if(this.name.endsWith(".avt")) {
            this.icon = "/img/logo.svg";
            this.type = "logic";
        }
        else if(this.name.endsWith(".html")) {
            this.icon = "/img/html-5.svg";
        }
        else if(this.name.endsWith(".json")) {
            this.icon = "/img/json.svg";
        }
        else if(this.name.endsWith(".js")) {
            this.icon = "/img/js.svg";
        }
        else if(this.name.endsWith(".d.ts")) {
            this.icon = "/img/dts.svg";
        }
        else if(this.name.endsWith(".ts")) {
            this.icon = "/img/ts.svg";
        }
    }



    protected override postCreation(): void {
        new Aventus.PressManager({
            element: this,
            onPress: () => {
                this.editor.openFile(this);
            }
        });
    }
    //#endregion

}